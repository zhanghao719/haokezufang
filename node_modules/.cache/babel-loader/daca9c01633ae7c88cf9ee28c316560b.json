{"ast":null,"code":"import \"antd-mobile/lib/wing-blank/style/css\";\nimport _WingBlank from \"antd-mobile/lib/wing-blank\";\nimport \"antd-mobile/lib/grid/style/css\";\nimport _Grid from \"antd-mobile/lib/grid\";\nimport \"antd-mobile/lib/carousel/style/css\";\nimport _Carousel from \"antd-mobile/lib/carousel\";\nimport \"antd-mobile/lib/search-bar/style/css\";\nimport _SearchBar from \"antd-mobile/lib/search-bar\";\nimport \"antd-mobile/lib/flex/style/css\";\nimport _Flex from \"antd-mobile/lib/flex\";\nvar _jsxFileName = \"F:\\\\\\u767E\\u5EA6\\u4E91\\u4E0B\\u8F7D\\\\React\\\\hkzf\\\\haokezufang\\\\src\\\\pages\\\\Index\\\\index.js\";\n\n/**\r\n * 默认首页\r\n */\nimport React, { Component } from 'react';\nimport { BASE_URL } from '../../utils/axios';\nimport { getSwiper, getGroup, getNews } from '../../utils/api/home';\nimport { getCityInfo } from '../../utils/api/city'; // 导入首页样式\n\nimport './index.scss';\nimport navs from '../../utils/navs_confing';\nconst data1 = Array.from(new Array(4)).map(() => ({\n  icon: 'https://gw.alipayobjects.com/zos/rmsportal/WXoqXTHrSnRcUwEaQgXJ.png'\n}));\n\nclass Index extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // 轮播图的数据\n      swiper: [],\n      // 租房小组宫格数据\n      grid: [],\n      // 资讯列表数据\n      news: [],\n      // 顶部搜索关键词\n      keyword: '',\n      // 当前城市数据\n      currCity: {\n        label: '--',\n        value: ''\n      },\n      // 处理调用后端接口后，不自动播放的问题\n      autoPlay: false,\n      // 设置了轮播图的高度,默认占位\n      imgHeight: 212\n    };\n\n    this.getCurrCity = () => {\n      // 定位当前城市（IP定位）\n      let myCity = new window.BMap.LocalCity(); // 获取定位信息=》怎么获取？=》回调函数=》获取定位数据\n\n      myCity.get(async result => {\n        // 百度地图返回的城市名字\n        let cityName = result.name; // 调用后端接口获取当前城市详细信息\n\n        const {\n          status,\n          data\n        } = await getCityInfo(cityName);\n\n        if (status === 200) {\n          this.setState({\n            currCity: data\n          });\n        }\n      });\n    };\n\n    this.getAllData = async () => {\n      const res = await Promise.all([getSwiper(), getGroup(), getNews()]);\n\n      if (res[0].status === 200) {\n        this.setState({\n          swiper: res[0].data,\n          grid: res[1].data,\n          news: res[2].data\n        }, () => {\n          // 有数据之后，再设置自动播放\n          this.setState({\n            autoPlay: true\n          });\n        });\n      }\n    };\n\n    this.renderSwiper = () => {\n      return this.state.swiper.map(val => React.createElement(\"a\", {\n        key: val.id,\n        href: \"http://www.itheima.com\",\n        style: {\n          display: 'inline-block',\n          width: '100%',\n          background: 'gray',\n          height: this.state.imgHeight\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: `${BASE_URL}${val.imgSrc}`,\n        alt: \"\",\n        style: {\n          width: '100%',\n          verticalAlign: 'top'\n        },\n        onLoad: () => {\n          // fire window resize event to change height\n          // 根据窗口做自适应\n          window.dispatchEvent(new Event('resize'));\n          this.setState({\n            imgHeight: 'auto'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })));\n    };\n\n    this.renderNavs = () => {\n      return navs.map(item => {\n        return React.createElement(_Flex.Item, {\n          onClick: () => this.props.history.push(item.path),\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: item.img,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, item.title));\n      });\n    };\n\n    this.renderTopNav = () => {\n      const {\n        push\n      } = this.props.history;\n      return React.createElement(_Flex, {\n        justify: \"around\",\n        className: \"topNav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"searchBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"city\",\n        onClick: () => push('/cityList'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, this.state.currCity.label, React.createElement(\"i\", {\n        className: \"iconfont icon-arrow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      })), React.createElement(_SearchBar, {\n        value: this.state.keyword,\n        onChange: v => this.setState({\n          keyword: v\n        }),\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u5C0F\\u533A\\u6216\\u5730\\u5740\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"map\",\n        onClick: () => push('/map'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        key: \"0\",\n        className: \"iconfont icon-map\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      })));\n    };\n  }\n\n  componentDidMount() {\n    // 代码冗余（累赘）=》优化=》简化代码\n    // this.getSwiper();\n    // this.getGroup();\n    // this.getNews()\n    this.getAllData();\n    this.getCurrCity();\n  } // 获取当前城市\n\n\n  // 渲染最新资讯\n  renderNews() {\n    return this.state.news.map(item => React.createElement(\"div\", {\n      className: \"news-item\",\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"imgwrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"img\",\n      src: `${BASE_URL}${item.imgSrc}`,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })), React.createElement(_Flex, {\n      className: \"content\",\n      direction: \"column\",\n      justify: \"between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, item.title), React.createElement(_Flex, {\n      className: \"info\",\n      justify: \"between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, item.from), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, item.date)))));\n  } // 渲染顶部导航\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, this.renderTopNav(), React.createElement(_Carousel, {\n      // 自动播放\n      autoplay: this.state.autoPlay // 循环播放\n      ,\n      infinite: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, this.renderSwiper()), React.createElement(_Flex, {\n      className: \"nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, this.renderNavs()), React.createElement(\"div\", {\n      className: \"group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(_Flex, {\n      className: \"group-title\",\n      justify: \"between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"\\u79DF\\u623F\\u5C0F\\u7EC4\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"\\u66F4\\u591A\")), React.createElement(_Grid, {\n      // 宫格数据\n      data: this.state.grid,\n      hasLine: false,\n      square: false // 宫格的列数\n      ,\n      columnNum: 2 // 自定义宫格的内容\n      ,\n      renderItem: item => // item结构\n      React.createElement(_Flex, {\n        className: \"grid-item\",\n        justify: \"between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"desc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, item.title), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, item.desc)), React.createElement(\"img\", {\n        src: `${BASE_URL}${item.imgSrc}`,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"news\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"group-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"\\u6700\\u65B0\\u8D44\\u8BAF\"), React.createElement(_WingBlank, {\n      size: \"md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, this.renderNews())));\n  }\n\n}\n\nexport default Index;","map":{"version":3,"sources":["F:/百度云下载/React/hkzf/haokezufang/src/pages/Index/index.js"],"names":["React","Component","BASE_URL","getSwiper","getGroup","getNews","getCityInfo","navs","data1","Array","from","map","icon","Index","state","swiper","grid","news","keyword","currCity","label","value","autoPlay","imgHeight","getCurrCity","myCity","window","BMap","LocalCity","get","result","cityName","name","status","data","setState","getAllData","res","Promise","all","renderSwiper","val","id","display","width","background","height","imgSrc","verticalAlign","dispatchEvent","Event","renderNavs","item","props","history","push","path","img","title","renderTopNav","v","componentDidMount","renderNews","date","render","desc"],"mappings":"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","sourcesContent":["/**\r\n * 默认首页\r\n */\r\nimport React, { Component } from 'react';\r\n\r\nimport { Carousel, Flex, Grid, WingBlank, SearchBar } from 'antd-mobile';\r\n\r\nimport { BASE_URL } from '../../utils/axios';\r\nimport { getSwiper, getGroup, getNews } from '../../utils/api/home';\r\nimport { getCityInfo } from '../../utils/api/city';\r\n\r\n// 导入首页样式\r\nimport './index.scss';\r\nimport navs from '../../utils/navs_confing';\r\n\r\nconst data1 = Array.from(new Array(4)).map(() => ({\r\n  icon: 'https://gw.alipayobjects.com/zos/rmsportal/WXoqXTHrSnRcUwEaQgXJ.png',\r\n}));\r\n\r\nclass Index extends Component {\r\n  state = {\r\n    // 轮播图的数据\r\n    swiper: [],\r\n    // 租房小组宫格数据\r\n    grid: [],\r\n    // 资讯列表数据\r\n    news: [],\r\n    // 顶部搜索关键词\r\n    keyword: '',\r\n    // 当前城市数据\r\n    currCity: {\r\n      label: '--',\r\n      value: ''\r\n    },\r\n    // 处理调用后端接口后，不自动播放的问题\r\n    autoPlay: false,\r\n    // 设置了轮播图的高度,默认占位\r\n    imgHeight: 212,\r\n  }\r\n  componentDidMount() {\r\n    // 代码冗余（累赘）=》优化=》简化代码\r\n    // this.getSwiper();\r\n    // this.getGroup();\r\n    // this.getNews()\r\n    this.getAllData();\r\n    this.getCurrCity()\r\n  }\r\n\r\n  // 获取当前城市\r\n  getCurrCity = () => {\r\n    // 定位当前城市（IP定位）\r\n    let myCity = new window.BMap.LocalCity();\r\n    // 获取定位信息=》怎么获取？=》回调函数=》获取定位数据\r\n    myCity.get(async (result) => {\r\n      // 百度地图返回的城市名字\r\n      let cityName = result.name;\r\n      // 调用后端接口获取当前城市详细信息\r\n      const { status, data } = await getCityInfo(cityName);\r\n      if (status === 200) {\r\n        this.setState({\r\n          currCity: data\r\n        })\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n\r\n  // 使用Promise.all统一=》处理首页所有接口调用\r\n  getAllData = async () => {\r\n    const res = await Promise.all([getSwiper(), getGroup(), getNews()]);\r\n    if (res[0].status === 200) {\r\n      this.setState({\r\n        swiper: res[0].data,\r\n        grid: res[1].data,\r\n        news: res[2].data\r\n      }, () => {\r\n        // 有数据之后，再设置自动播放\r\n        this.setState(({\r\n          autoPlay: true\r\n        }))\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  // 渲染轮播图\r\n  renderSwiper = () => {\r\n    return this.state.swiper.map(val => (\r\n      <a\r\n        key={val.id}\r\n        href=\"http://www.itheima.com\"\r\n        style={{ display: 'inline-block', width: '100%', background: 'gray', height: this.state.imgHeight }}\r\n      >\r\n        <img\r\n          src={`${BASE_URL}${val.imgSrc}`}\r\n          alt=\"\"\r\n          style={{ width: '100%', verticalAlign: 'top' }}\r\n          onLoad={() => {\r\n            // fire window resize event to change height\r\n            // 根据窗口做自适应\r\n            window.dispatchEvent(new Event('resize'));\r\n            this.setState({ imgHeight: 'auto' });\r\n          }}\r\n        />\r\n      </a>\r\n    ))\r\n  }\r\n\r\n  // 渲染栏目导航\r\n  renderNavs = () => {\r\n    return navs.map((item) => {\r\n      return <Flex.Item onClick={() => this.props.history.push(item.path)} key={item.id}>\r\n        <img src={item.img} />\r\n        <p>{item.title}</p>\r\n      </Flex.Item>\r\n    })\r\n  }\r\n\r\n  // 渲染最新资讯\r\n  renderNews() {\r\n    return this.state.news.map(item => (\r\n      <div className=\"news-item\" key={item.id}>\r\n        <div className=\"imgwrap\">\r\n          <img\r\n            className=\"img\"\r\n            src={`${BASE_URL}${item.imgSrc}`}\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n        <Flex className=\"content\" direction=\"column\" justify=\"between\">\r\n          <h3 className=\"title\">{item.title}</h3>\r\n          <Flex className=\"info\" justify=\"between\">\r\n            <span>{item.from}</span>\r\n            <span>{item.date}</span>\r\n          </Flex>\r\n        </Flex>\r\n      </div>\r\n    ))\r\n  }\r\n\r\n  // 渲染顶部导航\r\n  renderTopNav = () => {\r\n    const { push } = this.props.history;\r\n    return (\r\n      <Flex justify=\"around\" className=\"topNav\">\r\n        <div className=\"searchBox\">\r\n          <div className=\"city\" onClick={() => push('/cityList')}>\r\n            {this.state.currCity.label}<i className=\"iconfont icon-arrow\" />\r\n          </div>\r\n          <SearchBar\r\n            value={this.state.keyword}\r\n            onChange={(v) => this.setState({ keyword: v })}\r\n            placeholder=\"请输入小区或地址\"\r\n          />\r\n        </div>\r\n        <div className=\"map\" onClick={() => push('/map')}>\r\n          <i key=\"0\" className=\"iconfont icon-map\" />\r\n        </div>\r\n      </Flex>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* 顶部导航 */}\r\n        {\r\n          this.renderTopNav()\r\n        }\r\n        {/* 轮播图 */}\r\n        <Carousel\r\n          // 自动播放\r\n          autoplay={this.state.autoPlay}\r\n          // 循环播放\r\n          infinite\r\n        >\r\n          {/* 列表渲染 */}\r\n          {\r\n            this.renderSwiper()\r\n          }\r\n        </Carousel>\r\n        {/* 栏目导航 */}\r\n        <Flex className=\"nav\">\r\n          {\r\n            this.renderNavs()\r\n          }\r\n        </Flex>\r\n        {/* 租房小组 */}\r\n        <div className=\"group\">\r\n          {/* title */}\r\n          <Flex className=\"group-title\" justify=\"between\">\r\n            <h3>租房小组</h3>\r\n            <span>更多</span>\r\n          </Flex>\r\n          {/* 宫格布局 */}\r\n          <Grid\r\n            // 宫格数据\r\n            data={this.state.grid}\r\n            hasLine={false}\r\n            square={false}\r\n            // 宫格的列数\r\n            columnNum={2}\r\n            // 自定义宫格的内容\r\n            renderItem={item => (\r\n              // item结构\r\n              <Flex className=\"grid-item\" justify=\"between\">\r\n                <div className=\"desc\">\r\n                  <h3>{item.title}</h3>\r\n                  <p>{item.desc}</p>\r\n                </div>\r\n                <img src={`${BASE_URL}${item.imgSrc}`} alt=\"\" />\r\n              </Flex>\r\n            )}\r\n          />\r\n        </div>\r\n        {/* 资讯 */}\r\n        <div className=\"news\">\r\n          <h3 className=\"group-title\">最新资讯</h3>\r\n          <WingBlank size=\"md\">{this.renderNews()}</WingBlank>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}