{"ast":null,"code":"import \"antd-mobile/lib/nav-bar/style/css\";\nimport _NavBar from \"antd-mobile/lib/nav-bar\";\nimport \"antd-mobile/lib/icon/style/css\";\nimport _Icon from \"antd-mobile/lib/icon\";\nimport \"antd-mobile/lib/toast/style/css\";\nimport _Toast from \"antd-mobile/lib/toast\";\nvar _jsxFileName = \"F:\\\\\\u767E\\u5EA6\\u4E91\\u4E0B\\u8F7D\\\\React\\\\hkzf\\\\haokezufang\\\\src\\\\pages\\\\CityList\\\\index.js\";\nimport React, { Component } from 'react';\nimport { getCities, getHotCities } from '../../utils/api/city';\nimport { getCurrCity, setLocalData, CURR_CITY } from '../../utils';\nimport { List, AutoSizer } from 'react-virtualized';\nimport './index.scss';\n\nclass CityList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cityIndex: [],\n      cityList: {},\n      // 当前位置的索引,激活索引样式状态\n      activeIndex: 0\n    };\n\n    this.getRowHeight = ({\n      index\n    }) => {\n      const {\n        cityIndex,\n        cityList\n      } = this.state;\n      const key = cityIndex[index];\n      return 36 + 50 * cityList[key].length;\n    };\n\n    this.changeCity = city => {\n      const hasData = ['北京', '上海', '广州', '深圳'];\n\n      if (hasData.includes(city.label)) {\n        setLocalData(CURR_CITY, JSON.stringify(city));\n        this.props.history.goBack();\n      } else {\n        _Toast.info('该城市暂无房源数据！', 2);\n      }\n    };\n\n    this.rowRenderer = ({\n      key,\n      // Unique key within array of rows\n      index,\n      // Index of row within collection\n      isScrolling,\n      // The List is currently being scrolled\n      isVisible,\n      // This row is visible within the List (eg it is not an overscanned row)\n      style // Style object to be applied to row (to position it)\n\n    }) => {\n      const {\n        cityIndex,\n        cityList\n      } = this.state;\n      const letter = cityIndex[index];\n      return React.createElement(\"div\", {\n        key: key,\n        style: style,\n        className: \"city-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, this.formatLetter(letter)), cityList[letter].map(item => React.createElement(\"div\", {\n        onClick: () => this.changeCity(item),\n        key: item.value,\n        className: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, item.label)));\n    };\n\n    this.formatCities = data => {\n      let cityList = {},\n          cityIndex;\n      data.forEach(item => {\n        let first = item.short.slice(0, 1); // 判断对象中是否存在某个属性\n\n        if (!(first in cityList)) {\n          cityList[first] = [item];\n        } else {\n          cityList[first].push(item);\n        }\n      });\n      cityIndex = Object.keys(cityList).sort();\n      return {\n        cityIndex,\n        cityList\n      };\n    };\n\n    this.renderCityIndex = () => {\n      const {\n        cityIndex,\n        activeIndex\n      } = this.state;\n      return cityIndex.map((item, index) => {\n        return React.createElement(\"li\", {\n          key: item,\n          className: \"city-index-item\",\n          onClick: () => {\n            console.log(this.listRef);\n            this.listRef.current.scrollToRow(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: activeIndex === index ? 'index-active' : '',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, this.formatLetter(item, true)));\n      });\n    };\n\n    this.onRowsRendered = ({\n      startIndex\n    }) => {\n      if (this.state.activeIndex !== startIndex) {\n        console.log(startIndex);\n        this.setState({\n          activeIndex: startIndex\n        });\n      }\n    };\n\n    this.getCities = async () => {\n      let res = await getCities();\n\n      if (res.status === 200) {\n        console.log('cities:', res.data); // a-z的城市\n\n        const {\n          cityIndex,\n          cityList\n        } = this.formatCities(res.data); // 热门城市\n\n        const hot = await getHotCities();\n        console.log(hot);\n        cityIndex.unshift('hot');\n        cityList['hot'] = hot.data; // 当前城市\n\n        let cur = await getCurrCity();\n        cityIndex.unshift('#');\n        cityList['#'] = [cur];\n        console.log('formated:', cityList, cityIndex);\n        this.setState({\n          cityIndex,\n          cityList\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getCities(); // 获取列表实例\n\n    this.listRef = React.createRef();\n  } // 动态获取列表行高\n\n\n  // 格式化字母\n  formatLetter(letter, first) {\n    switch (letter) {\n      case 'hot':\n        return first ? '热' : '热门城市';\n\n      case '#':\n        return first ? '当' : '当前城市';\n\n      default:\n        return letter.toUpperCase();\n    }\n  } // 切换城市\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"cityList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(_NavBar, {\n      mode: \"light\",\n      icon: React.createElement(_Icon, {\n        type: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }),\n      onLeftClick: () => {\n        this.props.history.goBack();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"\\u57CE\\u5E02\\u9009\\u62E9\"), React.createElement(AutoSizer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, ({\n      height,\n      width\n    }) => React.createElement(List, {\n      height: height // scrollToIndex={this.state.activeIndex}\n      ,\n      ref: this.listRef,\n      scrollToAlignment: \"start\",\n      onRowsRendered: this.onRowsRendered,\n      rowCount: this.state.cityIndex.length,\n      rowHeight: this.getRowHeight,\n      rowRenderer: this.rowRenderer,\n      width: width,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    })), React.createElement(\"ul\", {\n      className: \"city-index\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, this.renderCityIndex()));\n  }\n\n}\n\nexport default CityList;","map":{"version":3,"sources":["F:/百度云下载/React/hkzf/haokezufang/src/pages/CityList/index.js"],"names":["React","Component","getCities","getHotCities","getCurrCity","setLocalData","CURR_CITY","List","AutoSizer","CityList","state","cityIndex","cityList","activeIndex","getRowHeight","index","key","length","changeCity","city","hasData","includes","label","JSON","stringify","props","history","goBack","info","rowRenderer","isScrolling","isVisible","style","letter","formatLetter","map","item","value","formatCities","data","forEach","first","short","slice","push","Object","keys","sort","renderCityIndex","console","log","listRef","current","scrollToRow","onRowsRendered","startIndex","setState","res","status","hot","unshift","cur","componentDidMount","createRef","toUpperCase","render","height","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { NavBar, Icon, Toast } from 'antd-mobile';\nimport { getCities, getHotCities } from '../../utils/api/city';\nimport { getCurrCity, setLocalData, CURR_CITY } from '../../utils';\n\nimport { List, AutoSizer } from 'react-virtualized';\n\nimport './index.scss';\n\n\nclass CityList extends Component {\n\n  state = {\n    cityIndex: [],\n    cityList: {},\n    // 当前位置的索引,激活索引样式状态\n    activeIndex: 0\n  }\n\n  componentDidMount() {\n    this.getCities();\n    // 获取列表实例\n    this.listRef = React.createRef()\n  }\n\n  // 动态获取列表行高\n  getRowHeight = ({ index }) => {\n    const { cityIndex, cityList } = this.state;\n    const key = cityIndex[index];\n    return 36 + 50 * cityList[key].length;\n  }\n\n  // 格式化字母\n  formatLetter(letter, first) {\n    switch (letter) {\n      case 'hot':\n        return first ? '热' : '热门城市';\n      case '#':\n        return first ? '当' : '当前城市';\n      default:\n        return letter.toUpperCase();\n    }\n  }\n\n  // 切换城市\n  changeCity = (city) => {\n    const hasData = ['北京', '上海', '广州', '深圳'];\n    if (hasData.includes(city.label)) {\n      setLocalData(CURR_CITY, JSON.stringify(city));\n      this.props.history.goBack()\n    } else {\n      Toast.info('该城市暂无房源数据！', 2)\n    }\n  }\n\n  // 渲染列表项\n  rowRenderer = ({\n    key, // Unique key within array of rows\n    index, // Index of row within collection\n    isScrolling, // The List is currently being scrolled\n    isVisible, // This row is visible within the List (eg it is not an overscanned row)\n    style, // Style object to be applied to row (to position it)\n  }) => {\n    const { cityIndex, cityList } = this.state;\n    const letter = cityIndex[index];\n    return (\n      <div key={key} style={style} className=\"city-item\">\n        <div className=\"title\">{this.formatLetter(letter)}</div>\n        {\n          cityList[letter].map((item) => <div onClick={() => this.changeCity(item)} key={item.value} className=\"name\">{item.label}</div>)\n        }\n      </div>\n    );\n  }\n\n  // 格式化城市列表数据\n  formatCities = (data) => {\n    let cityList = {}, cityIndex;\n    data.forEach((item) => {\n      let first = item.short.slice(0, 1);\n      // 判断对象中是否存在某个属性\n      if (!(first in cityList)) {\n        cityList[first] = [item]\n      } else {\n        cityList[first].push(item)\n      }\n    })\n    cityIndex = Object.keys(cityList).sort()\n    return {\n      cityIndex,\n      cityList\n    }\n  }\n\n  // 渲染右侧索引\n  renderCityIndex = () => {\n    const { cityIndex, activeIndex } = this.state;\n    return cityIndex.map((item, index) => {\n      return (\n        <li\n          key={item}\n          className=\"city-index-item\"\n          onClick={() => {\n            console.log(this.listRef);\n            this.listRef.current.scrollToRow(index)\n          }}\n        >\n          <span className={activeIndex === index ? 'index-active' : ''}>\n            {this.formatLetter(item, true)}\n          </span>\n        </li>\n      )\n    })\n  }\n\n  // 滚动列表触发\n  onRowsRendered = ({ startIndex }) => {\n    if (this.state.activeIndex !== startIndex) {\n      console.log(startIndex);\n      this.setState({\n        activeIndex: startIndex\n      })\n    }\n  }\n\n  // 获取城市列表数据\n  getCities = async () => {\n    let res = await getCities();\n    if (res.status === 200) {\n      console.log('cities:', res.data);\n      // a-z的城市\n      const {\n        cityIndex,\n        cityList\n      } = this.formatCities(res.data);\n      // 热门城市\n      const hot = await getHotCities();\n      console.log(hot);\n      cityIndex.unshift('hot');\n      cityList['hot'] = hot.data;\n      // 当前城市\n      let cur = await getCurrCity();\n      cityIndex.unshift('#');\n      cityList['#'] = [cur];\n      console.log('formated:', cityList, cityIndex);\n      this.setState({\n        cityIndex,\n        cityList\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"cityList\">\n        {/* bar */}\n        <NavBar\n          mode=\"light\"\n          icon={<Icon type=\"left\" />}\n          onLeftClick={() => {\n            this.props.history.goBack()\n          }}\n        >\n          城市选择\n</NavBar>\n        {/* 列表 */}\n        <AutoSizer>\n          {({ height, width }) => (\n            <List\n              height={height}\n              // scrollToIndex={this.state.activeIndex}\n              ref={this.listRef}\n              scrollToAlignment=\"start\"\n              onRowsRendered={this.onRowsRendered}\n              rowCount={this.state.cityIndex.length}\n              rowHeight={this.getRowHeight}\n              rowRenderer={this.rowRenderer}\n              width={width}\n            />\n          )}\n        </AutoSizer>\n        {/* 右侧索引列表 */}\n        <ul className=\"city-index\">\n          {this.renderCityIndex()}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CityList;"]},"metadata":{},"sourceType":"module"}