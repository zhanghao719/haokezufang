{"ast":null,"code":"import \"antd-mobile/lib/toast/style/css\";\nimport _Toast from \"antd-mobile/lib/toast\";\nimport axios from 'axios';\nimport { getToken } from '.';\nimport { withRouter } from 'react-router-dom'; // 获取路由能力\n\nlet rt;\n\nconst Sys = props => {\n  rt = props;\n  return null;\n};\n\nexport const Rou = withRouter(Sys);\nexport { rt }; //const BASE_URL = 'http://localhost:8080';\n\nconst BASE_URL = 'http://192.16812.9:8080'; // const BASE_URL = 'http://api-haoke-dev.itheima.net'\n// 创建请求实例\n// Set config defaults when creating the instance\n\nconst instance = axios.create({\n  baseURL: BASE_URL // timeout: 2000\n\n}); // Alter defaults after instance has been created\n// instance.defaults.headers.common['Authorization'] = AUTH_TOKEN;\n// Add a request interceptor\n\ninstance.interceptors.request.use(function (config) {\n  _Toast.loading('加载中...', 0); // Do something before request is sent\n\n\n  const {\n    url\n  } = config;\n\n  if (url.startsWith('/user') && !url.startsWith('/user/registered') && !url.startsWith('/user/login')) {\n    config.headers.authorization = getToken();\n  }\n\n  return config;\n}, function (error) {\n  // Do something with request error\n  return Promise.reject(error);\n}); // Add a response interceptor\n\ninstance.interceptors.response.use(function (response) {\n  _Toast.hide(); // Any status code that lie within the range of 2xx cause this function to trigger\n  // Do something with response data\n\n\n  const data = {\n    status: response.data.status,\n    data: response.data.body\n  };\n  if (response.data.description) data.description = response.data.description;\n  return data;\n}, function (error) {\n  // Any status codes that falls outside the range of 2xx cause this function to trigger\n  // Do something with response error\n  return Promise.reject(error);\n});\nexport { BASE_URL };\nexport default instance;","map":{"version":3,"sources":["F:/百度云下载/React/hkzf/haokezufang/src/utils/axios.js"],"names":["axios","getToken","withRouter","rt","Sys","props","Rou","BASE_URL","instance","create","baseURL","interceptors","request","use","config","loading","url","startsWith","headers","authorization","error","Promise","reject","response","hide","data","status","body","description"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,GAAzB;AAGA,SAASC,UAAT,QAA2B,kBAA3B,C,CAEA;;AACA,IAAIC,EAAJ;;AACA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AACrBF,EAAAA,EAAE,GAAGE,KAAL;AACA,SAAO,IAAP;AACD,CAHD;;AAIA,OAAO,MAAMC,GAAG,GAAGJ,UAAU,CAACE,GAAD,CAAtB;AACP,SAASD,EAAT,G,CAEA;;AACA,MAAMI,QAAQ,GAAG,yBAAjB,C,CACA;AACA;AACA;;AACA,MAAMC,QAAQ,GAAGR,KAAK,CAACS,MAAN,CAAa;AAC5BC,EAAAA,OAAO,EAAEH,QADmB,CAE5B;;AAF4B,CAAb,CAAjB,C,CAKA;AACA;AAEA;;AACAC,QAAQ,CAACG,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAkC,UAAUC,MAAV,EAAkB;AAClD,SAAMC,OAAN,CAAc,QAAd,EAAwB,CAAxB,EADkD,CAElD;;;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAUF,MAAhB;;AACA,MAAIE,GAAG,CAACC,UAAJ,CAAe,OAAf,KAA2B,CAACD,GAAG,CAACC,UAAJ,CAAe,kBAAf,CAA5B,IACF,CAACD,GAAG,CAACC,UAAJ,CAAe,aAAf,CADH,EACkC;AAChCH,IAAAA,MAAM,CAACI,OAAP,CAAeC,aAAf,GAA+BlB,QAAQ,EAAvC;AACD;;AACD,SAAOa,MAAP;AACD,CATD,EASG,UAAUM,KAAV,EAAiB;AAClB;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAZD,E,CAcA;;AACAZ,QAAQ,CAACG,YAAT,CAAsBY,QAAtB,CAA+BV,GAA/B,CAAmC,UAAUU,QAAV,EAAoB;AACrD,SAAMC,IAAN,GADqD,CAErD;AACA;;;AACA,QAAMC,IAAI,GAAG;AACXC,IAAAA,MAAM,EAAEH,QAAQ,CAACE,IAAT,CAAcC,MADX;AAEXD,IAAAA,IAAI,EAAEF,QAAQ,CAACE,IAAT,CAAcE;AAFT,GAAb;AAIA,MAAIJ,QAAQ,CAACE,IAAT,CAAcG,WAAlB,EAA+BH,IAAI,CAACG,WAAL,GAAmBL,QAAQ,CAACE,IAAT,CAAcG,WAAjC;AAC/B,SAAOH,IAAP;AACD,CAVD,EAUG,UAAUL,KAAV,EAAiB;AAClB;AACA;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAdD;AAgBA,SAASb,QAAT;AACA,eAAeC,QAAf","sourcesContent":["import axios from 'axios';\nimport { getToken } from '.';\nimport { Toast } from 'antd-mobile';\n\nimport { withRouter } from 'react-router-dom'\n\n// 获取路由能力\nlet rt;\nconst Sys = (props) => {\n  rt = props;\n  return null\n}\nexport const Rou = withRouter(Sys);\nexport { rt };\n\n//const BASE_URL = 'http://localhost:8080';\nconst BASE_URL = 'http://192.16812.9:8080';\n// const BASE_URL = 'http://api-haoke-dev.itheima.net'\n// 创建请求实例\n// Set config defaults when creating the instance\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  // timeout: 2000\n});\n\n// Alter defaults after instance has been created\n// instance.defaults.headers.common['Authorization'] = AUTH_TOKEN;\n\n// Add a request interceptor\ninstance.interceptors.request.use(function (config) {\n  Toast.loading('加载中...', 0);\n  // Do something before request is sent\n  const { url } = config;\n  if (url.startsWith('/user') && !url.startsWith('/user/registered') &&\n    !url.startsWith('/user/login')) {\n    config.headers.authorization = getToken()\n  }\n  return config;\n}, function (error) {\n  // Do something with request error\n  return Promise.reject(error);\n});\n\n// Add a response interceptor\ninstance.interceptors.response.use(function (response) {\n  Toast.hide()\n  // Any status code that lie within the range of 2xx cause this function to trigger\n  // Do something with response data\n  const data = {\n    status: response.data.status,\n    data: response.data.body\n  }\n  if (response.data.description) data.description = response.data.description;\n  return data;\n}, function (error) {\n  // Any status codes that falls outside the range of 2xx cause this function to trigger\n  // Do something with response error\n  return Promise.reject(error);\n});\n\nexport { BASE_URL }\nexport default instance"]},"metadata":{},"sourceType":"module"}