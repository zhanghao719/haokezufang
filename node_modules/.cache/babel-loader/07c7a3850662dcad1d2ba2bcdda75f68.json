{"ast":null,"code":"var _jsxFileName = \"F:\\\\\\u767E\\u5EA6\\u4E91\\u4E0B\\u8F7D\\\\React\\\\hkzf\\\\haokezufang\\\\src\\\\pages\\\\House\\\\components\\\\Filter\\\\index.js\";\nimport React, { Component } from 'react';\nimport FilterTitle from '../FilterTitle';\nimport FilterPicker from '../FilterPicker';\nimport FilterMore from '../FilterMore';\nimport styles from './index.module.css';\nimport { getHouseFilters } from '../../../../utils/api/house';\nimport { getCurrCity } from '../../../../utils'; // 标题高亮状态\n\nconst titleSelectedStatus = {\n  area: false,\n  mode: false,\n  price: false,\n  more: false\n}; // 选中数据维护\n\nconst selectedValues = {\n  area: ['area', 'null'],\n  // area: ['area', 'AREA|69cc5f6d-4f29-a77c', 'AREA|73aa1890-64c7-51d9'],\n  mode: ['null'],\n  // mode: ['true'],\n  price: ['null'],\n  // price: ['PRICE|1000'],\n  more: []\n};\nexport default class Filter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      titleSelectedStatus: { ...titleSelectedStatus\n      },\n      // 打开当前type状态\n      openType: ''\n    };\n\n    this.getFilterData = async () => {\n      const {\n        value\n      } = await getCurrCity(); // 保存城市ID\n\n      this.cityId = value;\n      let res = await getHouseFilters(value);\n      console.log(res);\n      res.status === 200 && (this.filterData = res.data);\n    };\n\n    this.onTitleClick = type => {\n      this.setState({\n        titleSelectedStatus: { ...titleSelectedStatus,\n          [type]: true\n        },\n        openType: type\n      });\n    };\n\n    this.isShow = () => {\n      const {\n        openType\n      } = this.state;\n      return openType === 'area' || openType === 'mode' || openType === 'price';\n    };\n\n    this.onCancel = () => {\n      // 处理高亮\n      let newSel = this.handlerSel();\n      this.setState({\n        openType: '',\n        titleSelectedStatus: newSel\n      });\n    };\n\n    this.handlerSel = () => {\n      // 创建新的标题选中状态对象\n      const newTitleSelectedStatus = {};\n      Object.keys(this.selectedValues).forEach(key => {\n        let cur = this.selectedValues[key];\n\n        if (key === 'area' && (cur[1] !== \"null\" || cur[0] === 'subway')) {\n          newTitleSelectedStatus[key] = true;\n        } else if (key === 'mode' && cur[0] !== \"null\") {\n          newTitleSelectedStatus[key] = true;\n        } else if (key === 'price' && cur[0] !== \"null\") {\n          newTitleSelectedStatus[key] = true;\n        } else if (key === 'more' && cur.length !== 0) {\n          // 更多选择项 FilterMore 组件情况\n          newTitleSelectedStatus[key] = true;\n        } else {\n          newTitleSelectedStatus[key] = false;\n        }\n      });\n      return newTitleSelectedStatus;\n    };\n\n    this.handlerFilters = selectedValues => {\n      // 筛选条件数据\n      const {\n        area,\n        mode,\n        price,\n        more\n      } = selectedValues; // 组装数据\n\n      const filters = {}; // area | subway\n\n      let areaKey = area[0],\n          aval;\n\n      if (area.length === 2) {\n        aval = area[1];\n      } else {\n        if (area[2] !== 'null') {\n          aval = area[2];\n        } else {\n          aval = area[1];\n        }\n      }\n\n      filters[areaKey] = aval; // mode\n\n      filters.rentType = mode[0]; // price\n\n      filters.price = price[0]; // more\n\n      filters.more = more.join(',');\n      console.log('filters:', filters);\n      return filters;\n    };\n\n    this.onOk = sel => {\n      const {\n        openType\n      } = this.state;\n      console.log('sel:', openType, sel); // 存储到实例属性上\n\n      this.selectedValues[openType] = sel; // 当前选中的所有筛选条件数据\n\n      console.log('all-sels:', this.selectedValues); // 处理高亮\n\n      let newSel = this.handlerSel();\n      console.log('s', newSel);\n      this.setState({\n        openType: '',\n        titleSelectedStatus: newSel\n      }, () => {\n        // 处理筛选条件数据\n        this.props.onFilter(this.handlerFilters(this.selectedValues));\n      });\n    };\n\n    this.renderFilterMore = () => {\n      const {\n        openType\n      } = this.state;\n\n      if (openType === 'more') {\n        console.log(this.filterData);\n        const {\n          roomType,\n          oriented,\n          floor,\n          characteristic\n        } = this.filterData;\n        const data = {\n          roomType,\n          oriented,\n          floor,\n          characteristic\n        };\n        console.log('n-sel:', this.selectedValues[openType]);\n        return React.createElement(FilterMore, {\n          data: data,\n          value: this.selectedValues[openType],\n          onOk: this.onOk,\n          onCancel: this.onCancel,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        });\n      }\n\n      return null;\n    };\n  }\n\n  componentDidMount() {\n    // 存储到实例属性上\n    this.selectedValues = { ...selectedValues\n    };\n    this.getFilterData();\n  } // 获取筛选条件数据\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: styles.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, this.isShow() ? React.createElement(\"div\", {\n      onClick: this.onCancel,\n      className: styles.mask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      className: styles.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(FilterTitle, {\n      titleSelectedStatus: this.state.titleSelectedStatus,\n      onTitleClick: this.onTitleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), this.renderFilterPicker(), this.renderFilterMore()));\n  }\n\n}","map":{"version":3,"sources":["F:/百度云下载/React/hkzf/haokezufang/src/pages/House/components/Filter/index.js"],"names":["React","Component","FilterTitle","FilterPicker","FilterMore","styles","getHouseFilters","getCurrCity","titleSelectedStatus","area","mode","price","more","selectedValues","Filter","state","openType","getFilterData","value","cityId","res","console","log","status","filterData","data","onTitleClick","type","setState","isShow","onCancel","newSel","handlerSel","newTitleSelectedStatus","Object","keys","forEach","key","cur","length","handlerFilters","filters","areaKey","aval","rentType","join","onOk","sel","props","onFilter","renderFilterMore","roomType","oriented","floor","characteristic","componentDidMount","render","root","mask","content","renderFilterPicker"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport FilterTitle from '../FilterTitle'\r\nimport FilterPicker from '../FilterPicker'\r\nimport FilterMore from '../FilterMore'\r\n\r\nimport styles from './index.module.css'\r\nimport { getHouseFilters } from '../../../../utils/api/house'\r\nimport { getCurrCity } from '../../../../utils'\r\n\r\n// 标题高亮状态\r\nconst titleSelectedStatus = {\r\n  area: false,\r\n  mode: false,\r\n  price: false,\r\n  more: false\r\n}\r\n\r\n// 选中数据维护\r\nconst selectedValues = {\r\n  area: ['area', 'null'],\r\n  // area: ['area', 'AREA|69cc5f6d-4f29-a77c', 'AREA|73aa1890-64c7-51d9'],\r\n  mode: ['null'],\r\n  // mode: ['true'],\r\n  price: ['null'],\r\n  // price: ['PRICE|1000'],\r\n  more: []\r\n}\r\nexport default class Filter extends Component {\r\n  // 标题高亮状态\r\n  state = {\r\n    titleSelectedStatus: { ...titleSelectedStatus },\r\n    // 打开当前type状态\r\n    openType: ''\r\n  }\r\n\r\n  componentDidMount() {\r\n    // 存储到实例属性上\r\n    this.selectedValues = { ...selectedValues };\r\n    this.getFilterData()\r\n  }\r\n\r\n\r\n  // 获取筛选条件数据\r\n  getFilterData = async () => {\r\n    const { value } = await getCurrCity();\r\n    // 保存城市ID\r\n    this.cityId = value;\r\n    let res = await getHouseFilters(value);\r\n    console.log(res);\r\n    res.status === 200 && (this.filterData = res.data)\r\n\r\n  }\r\n\r\n  // 传递给子组件控制状态的方法\r\n  onTitleClick = (type) => {\r\n    this.setState({\r\n      titleSelectedStatus: { ...titleSelectedStatus, [type]: true },\r\n      openType: type\r\n    })\r\n  }\r\n\r\n  // 控制前三个过滤器内容和遮罩层显隐\r\n  isShow = () => {\r\n    const { openType } = this.state\r\n    return openType === 'area' || openType === 'mode' || openType === 'price'\r\n  }\r\n\r\n  // 关闭前三个过滤器内容和遮罩层\r\n  onCancel = () => {\r\n    // 处理高亮\r\n    let newSel = this.handlerSel();\r\n    this.setState({\r\n      openType: '',\r\n      titleSelectedStatus: newSel\r\n    })\r\n  }\r\n\r\n  // 处理筛选器选中后有无条件的高亮状态\r\n  handlerSel = () => {\r\n    // 创建新的标题选中状态对象\r\n    const newTitleSelectedStatus = {};\r\n    Object.keys(this.selectedValues).forEach((key) => {\r\n      let cur = this.selectedValues[key];\r\n      if (\r\n        (key === 'area') && (cur[1] !==\r\n          \"null\" || cur[0] === 'subway')) {\r\n        newTitleSelectedStatus[key] = true\r\n      } else if (key === 'mode' && cur[0] !== \"null\") {\r\n        newTitleSelectedStatus[key] = true\r\n      } else if (key === 'price' && cur[0] !== \"null\") {\r\n        newTitleSelectedStatus[key] = true\r\n      } else if (key === 'more' && cur.length !== 0) {\r\n        // 更多选择项 FilterMore 组件情况\r\n        newTitleSelectedStatus[key] = true\r\n      } else {\r\n        newTitleSelectedStatus[key] = false\r\n      }\r\n    })\r\n    return newTitleSelectedStatus\r\n  }\r\n\r\n  // 处理后台需要的筛选条件数据\r\n  handlerFilters = (selectedValues) => {\r\n    // 筛选条件数据\r\n    const { area, mode, price, more } = selectedValues;\r\n    // 组装数据\r\n    const filters = {};\r\n    // area | subway\r\n    let areaKey = area[0], aval;\r\n    if (area.length === 2) {\r\n      aval = area[1]\r\n    } else {\r\n      if (area[2] !== 'null') {\r\n        aval = area[2]\r\n      } else {\r\n        aval = area[1]\r\n      }\r\n    }\r\n    filters[areaKey] = aval;\r\n    // mode\r\n    filters.rentType = mode[0]\r\n    // price\r\n    filters.price = price[0]\r\n    // more\r\n    filters.more = more.join(',')\r\n    console.log('filters:', filters);\r\n    return filters\r\n  }\r\n\r\n  // 确定选择过滤条件\r\n  onOk = (sel) => {\r\n    const { openType } = this.state;\r\n    console.log('sel:', openType, sel);\r\n    // 存储到实例属性上\r\n    this.selectedValues[openType] = sel;\r\n    // 当前选中的所有筛选条件数据\r\n    console.log('all-sels:', this.selectedValues)\r\n    // 处理高亮\r\n    let newSel = this.handlerSel();\r\n    console.log('s', newSel);\r\n    this.setState({\r\n      openType: '',\r\n      titleSelectedStatus: newSel\r\n    }, () => {\r\n      // 处理筛选条件数据\r\n      this.props.onFilter(this.handlerFilters(this.selectedValues))\r\n    })\r\n  }\r\n\r\n  // 给Picker组件提供数据  \r\n  // renderFilterPicker = () => {\r\n  //   if (this.isShow()) {\r\n  //     const { openType } = this.state;\r\n  //     const { area, subway, rentType, price } = this.filterData;\r\n  //     let data, cols = 1;\r\n  //     switch (openType) {\r\n  //       case 'area':\r\n  //         data = [area, subway];\r\n  //         cols = 3\r\n  //         break;\r\n  //       case 'mode':\r\n  //         data = rentType;\r\n  //         cols = 1\r\n  //         break;\r\n  //       case 'price':\r\n  //         data = price;\r\n  //         cols = 1\r\n  //         break;\r\n  //     }\r\n  //     console.log('n-sel:', this.selectedValues[openType])\r\n  //     return <FilterPicker key={openType} data={data} value={this.selectedValues[openType]} cols={cols} onCancel={this.onCancel} onOk={this.onOk} />\r\n\r\n  //   }\r\n  // }\r\n  // 渲染和处理FilterMore组件\r\n  renderFilterMore = () => {\r\n    const {\r\n      openType\r\n    } = this.state;\r\n    if (openType === 'more') {\r\n      console.log(this.filterData);\r\n      const { roomType, oriented, floor, characteristic } = this.filterData;\r\n      const data = { roomType, oriented, floor, characteristic }\r\n      console.log('n-sel:', this.selectedValues[openType]);\r\n      return <FilterMore\r\n        data={data}\r\n        value={this.selectedValues[openType]}\r\n        onOk={this.onOk}\r\n        onCancel={this.onCancel}\r\n      />\r\n    }\r\n    return null\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.root}>\r\n        {/* 前三个菜单的遮罩层 */}\r\n        {this.isShow() ? <div onClick={this.onCancel} className={styles.mask} /> : null}\r\n\r\n        <div className={styles.content}>\r\n          {/* 标题栏 */}\r\n          <FilterTitle titleSelectedStatus={this.state.titleSelectedStatus} onTitleClick={this.onTitleClick} />\r\n\r\n          {/* 前三个菜单对应的内容： */}\r\n          {this.renderFilterPicker()}\r\n\r\n          {/* 最后一个菜单对应的内容： */}\r\n          {/* <FilterMore /> */}\r\n          {\r\n            this.renderFilterMore()\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}