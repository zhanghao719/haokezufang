{"ast":null,"code":"import \"antd-mobile/lib/toast/style/css\";\nimport _Toast from \"antd-mobile/lib/toast\";\nvar _jsxFileName = \"F:\\\\\\u767E\\u5EA6\\u4E91\\u4E0B\\u8F7D\\\\React\\\\hkzf\\\\haokezufang\\\\src\\\\pages\\\\House\\\\index.js\";\nimport React from 'react';\nimport Filter from './components/Filter'; // 导入样式\n\nimport styles from './index.module.css';\nimport { getHouseByFilters } from '../../utils/api/house';\nimport { getCurrCity } from '../../utils';\nimport { List, AutoSizer, InfiniteLoader } from 'react-virtualized';\nimport HouseItem from '../../components/HouseItem';\nimport { BASE_URL } from '../../utils/axios';\nimport NoHouse from '../../components/NoHouse';\nexport default class HouseList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // 房屋列表数据\n      list: [],\n      count: 0\n    };\n\n    this.onFilter = async filters => {\n      console.log('找房列表获取filter数据：', filters);\n      this.filters = filters;\n      this.getHouseList();\n    };\n\n    this.getHouseList = async () => {\n      // 加载提示\n      // 第二个参数为0，不自动关闭\n      // Toast.loading('加载中...', 0)\n      let res = await getHouseByFilters(this.cityId, this.filters, 1, 20);\n      console.log(res); // 调用hide关闭\n      // Toast.hide();\n\n      const {\n        list,\n        count\n      } = res.data;\n\n      if (count !== 0) {\n        _Toast.success(`获取到${count}条房源信息`, 2);\n      }\n\n      this.setState({\n        list,\n        count\n      });\n    };\n\n    this.renderHouseItem = ({\n      key,\n      // Unique key within array of rows\n      index,\n      // Index of row within collection\n      isScrolling,\n      // The List is currently being scrolled\n      isVisible,\n      // This row is visible within the List (eg it is not an overscanned row)\n      style // Style object to be applied to row (to position it)\n\n    }) => {\n      const {\n        list\n      } = this.state;\n      const item = list[index]; // 处理暂时没有加载到数据情况\n\n      if (!item) {\n        return React.createElement(\"div\", {\n          style: style,\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: styles.loading,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }));\n      }\n\n      ; // console.log(this.props.history)\n      // 处理图片地址\n\n      item.src = BASE_URL + item.houseImg; // console.log(item);\n\n      return React.createElement(HouseItem, Object.assign({}, item, {\n        key: key,\n        onClick: () => {\n          this.props.history.push({\n            pathname: `/detail/${item.houseCode}`\n          }, {\n            id: item.houseCode\n          });\n        },\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }));\n    };\n\n    this.isRowLoaded = ({\n      index\n    }) => {\n      // console.log('rowloaded:', index);\n      const {\n        list\n      } = this.state;\n      return !!list[index];\n    };\n\n    this.loadMoreRows = ({\n      startIndex,\n      stopIndex\n    }) => {\n      console.log('loadmore', startIndex, stopIndex); // 调用封装的api(返回一个Promise对象)\n\n      return getHouseByFilters(this.cityId, this.filters, startIndex, stopIndex).then(res => {\n        console.log('loadmore:', res); // 刷新视图\n\n        this.setState({\n          list: [...this.state.list, ...res.data.list]\n        }, () => console.log(this.state.list.length));\n      });\n    };\n\n    this.renderNoHouse = () => {\n      return React.createElement(NoHouse, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"\\u6CA1\\u6709\\u66F4\\u591A\\u623F\\u6E90,\\u8BF7\\u6362\\u4E2A\\u641C\\u7D22\\u6761\\u4EF6\\u5427\");\n    };\n\n    this.renderHouseList = () => {\n      const {\n        count\n      } = this.state; // 没有数据渲染NoHouse组件\n\n      return count === 0 ? this.renderNoHouse() : React.createElement(InfiniteLoader, {\n        isRowLoaded: this.isRowLoaded,\n        loadMoreRows: this.loadMoreRows // 远程数据总条数\n        ,\n        rowCount: this.state.count,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, ({\n        onRowsRendered,\n        registerChild\n      }) => React.createElement(AutoSizer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, ({\n        height,\n        width\n      }) => React.createElement(List, {\n        className: styles.houseList,\n        height: height,\n        rowCount: this.state.count,\n        rowHeight: 130,\n        rowRenderer: this.renderHouseItem,\n        onRowsRendered: onRowsRendered,\n        ref: registerChild,\n        width: width,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })));\n    };\n  }\n\n  async componentDidMount() {\n    // 获取城市ID\n    const {\n      value\n    } = await getCurrCity();\n    this.cityId = value;\n    this.getHouseList();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: styles.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Filter, {\n      onFilter: this.onFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), this.renderHouseList());\n  }\n\n}","map":{"version":3,"sources":["F:/百度云下载/React/hkzf/haokezufang/src/pages/House/index.js"],"names":["React","Filter","styles","getHouseByFilters","getCurrCity","List","AutoSizer","InfiniteLoader","HouseItem","BASE_URL","NoHouse","HouseList","Component","state","list","count","onFilter","filters","console","log","getHouseList","res","cityId","data","success","setState","renderHouseItem","key","index","isScrolling","isVisible","style","item","loading","src","houseImg","props","history","push","pathname","houseCode","id","isRowLoaded","loadMoreRows","startIndex","stopIndex","then","length","renderNoHouse","renderHouseList","onRowsRendered","registerChild","height","width","houseList","componentDidMount","value","render","root"],"mappings":"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","sourcesContent":["import React from 'react'\r\n\r\nimport { Toast } from 'antd-mobile'\r\n\r\nimport Filter from './components/Filter'\r\n// 导入样式\r\nimport styles from './index.module.css'\r\nimport { getHouseByFilters } from '../../utils/api/house'\r\nimport { getCurrCity } from '../../utils'\r\nimport { List, AutoSizer, InfiniteLoader } from 'react-virtualized';\r\nimport HouseItem from '../../components/HouseItem'\r\nimport { BASE_URL } from '../../utils/axios'\r\nimport NoHouse from '../../components/NoHouse'\r\n\r\nexport default class HouseList extends React.Component {\r\n\r\n  state = {\r\n    // 房屋列表数据\r\n    list: [],\r\n    count: 0\r\n  }\r\n\r\n  async componentDidMount() {\r\n    // 获取城市ID\r\n    const { value } = await getCurrCity();\r\n    this.cityId = value;\r\n    this.getHouseList()\r\n  }\r\n\r\n\r\n  onFilter = async (filters) => {\r\n    console.log('找房列表获取filter数据：', filters);\r\n    this.filters = filters;\r\n    this.getHouseList()\r\n  }\r\n\r\n\r\n  // 加载房屋列表数据\r\n  getHouseList = async () => {\r\n    // 加载提示\r\n    // 第二个参数为0，不自动关闭\r\n    // Toast.loading('加载中...', 0)\r\n    let res = await getHouseByFilters(this.cityId, this.filters, 1, 20);\r\n    console.log(res);\r\n    // 调用hide关闭\r\n    // Toast.hide();\r\n    const { list, count } = res.data;\r\n    if (count !== 0) {\r\n      Toast.success(`获取到${count}条房源信息`, 2)\r\n    }\r\n    this.setState({\r\n      list,\r\n      count\r\n    })\r\n  }\r\n\r\n  // 渲染列表项\r\n  renderHouseItem = ({\r\n    key, // Unique key within array of rows\r\n    index, // Index of row within collection\r\n    isScrolling, // The List is currently being scrolled\r\n    isVisible, // This row is visible within the List (eg it is not an overscanned row)\r\n    style, // Style object to be applied to row (to position it)\r\n  }) => {\r\n    const { list } = this.state\r\n    const item = list[index]\r\n    // 处理暂时没有加载到数据情况\r\n    if (!item) {\r\n      return (\r\n        <div style={style} key={key}>\r\n          <p className={styles.loading}></p>\r\n        </div>\r\n      )\r\n    };\r\n    // console.log(this.props.history)\r\n    // 处理图片地址\r\n    item.src = BASE_URL + item.houseImg;\r\n    // console.log(item);\r\n    return <HouseItem {...item} key={key} onClick={() => { this.props.history.push({ pathname: `/detail/${item.houseCode}` }, { id: item.houseCode }) }} style={style} />\r\n  }\r\n\r\n  // 判断列表中的每一行是否加载完成\r\n  isRowLoaded = ({ index }) => {\r\n    // console.log('rowloaded:', index);\r\n    const { list } = this.state;\r\n    return !!list[index];\r\n  }\r\n\r\n  // 下拉加载更多时触发：加载下一页数据\r\n  loadMoreRows = ({ startIndex, stopIndex }) => {\r\n    console.log('loadmore', startIndex, stopIndex);\r\n    // 调用封装的api(返回一个Promise对象)\r\n    return getHouseByFilters(this.cityId, this.filters, startIndex, stopIndex).then((res) => {\r\n      console.log('loadmore:', res);\r\n      // 刷新视图\r\n      this.setState({\r\n        list: [...this.state.list, ...res.data.list]\r\n      }, () => console.log(this.state.list.length))\r\n    });\r\n  }\r\n\r\n  // 没有数据时显示\r\n  renderNoHouse = () => {\r\n    return <NoHouse>没有更多房源,请换个搜索条件吧</NoHouse>\r\n  }\r\n  // 渲染列表\r\n  renderHouseList = () => {\r\n    const { count } = this.state;\r\n    // 没有数据渲染NoHouse组件\r\n    return count === 0 ? this.renderNoHouse() : (\r\n      <InfiniteLoader\r\n        isRowLoaded={this.isRowLoaded}\r\n        loadMoreRows={this.loadMoreRows}\r\n        // 远程数据总条数\r\n        rowCount={this.state.count}\r\n      >\r\n        {({ onRowsRendered, registerChild }) => (\r\n          <AutoSizer>\r\n            {({ height, width }) => (\r\n              <List\r\n                className={styles.houseList}\r\n                height={height}\r\n                rowCount={this.state.count}\r\n                rowHeight={130}\r\n                rowRenderer={this.renderHouseItem}\r\n                onRowsRendered={onRowsRendered}\r\n                ref={registerChild}\r\n                width={width}\r\n              />\r\n            )}\r\n          </AutoSizer>\r\n        )}\r\n      </InfiniteLoader>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.root}>\r\n        {/* 条件筛选栏 */}\r\n        <Filter onFilter={this.onFilter} />\r\n        {/* 列表 */}\r\n        {this.renderHouseList()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}