{"ast":null,"code":"/**\n * 工具库\n */\nimport { getCityInfo } from \"./api/city\"; // 数据持久化\n// 当前城市KEY\n\nexport const CURR_CITY = 'hkzf_city',\n      TOKEN = 'hkzf_token';\nexport const getLocalData = key => {\n  return window.localStorage.getItem(key);\n};\nexport const setLocalData = (key, val) => {\n  window.localStorage.setItem(key, val);\n};\nexport const removeLocalData = key => {\n  window.localStorage.removeItem(key);\n}; // token处理\n\nconst getToken = () => getLocalData(TOKEN);\n\nconst setToken = val => setLocalData(TOKEN, val);\n\nconst removeToken = () => removeLocalData(TOKEN);\n\nconst isAuth = () => !!getToken();\n\nexport { getToken, setToken, removeToken, isAuth }; // 获取当前城市信息\n\nexport const getCurrCity = () => {\n  const currentCity = JSON.parse(getLocalData(CURR_CITY));\n\n  if (!currentCity) {\n    return new Promise((reslove, reject) => {\n      const myCity = new window.BMap.LocalCity();\n      myCity.get(async result => {\n        let res = await getCityInfo(result.name);\n\n        if (res.status === 200) {\n          console.log('cc', res.data);\n          setLocalData(CURR_CITY, JSON.stringify(res.data));\n          reslove(res.data);\n        } else {\n          reject(res);\n        }\n      });\n    });\n  } else {\n    console.log('has', currentCity);\n    return Promise.resolve(currentCity);\n  }\n};","map":{"version":3,"sources":["F:/百度云下载/React/hkzf/haokezufang/src/utils/index.js"],"names":["getCityInfo","CURR_CITY","TOKEN","getLocalData","key","window","localStorage","getItem","setLocalData","val","setItem","removeLocalData","removeItem","getToken","setToken","removeToken","isAuth","getCurrCity","currentCity","JSON","parse","Promise","reslove","reject","myCity","BMap","LocalCity","get","result","res","name","status","console","log","data","stringify","resolve"],"mappings":"AAAA;;;AAGA,SAASA,WAAT,QAA4B,YAA5B,C,CAGA;AACA;;AACA,OAAO,MAAMC,SAAS,GAAG,WAAlB;AAAA,MAA+BC,KAAK,GAAG,YAAvC;AAEP,OAAO,MAAMC,YAAY,GAAIC,GAAD,IAAS;AACnC,SAAOC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BH,GAA5B,CAAP;AACD,CAFM;AAGP,OAAO,MAAMI,YAAY,GAAG,CAACJ,GAAD,EAAMK,GAAN,KAAc;AACxCJ,EAAAA,MAAM,CAACC,YAAP,CAAoBI,OAApB,CAA4BN,GAA5B,EAAiCK,GAAjC;AACD,CAFM;AAGP,OAAO,MAAME,eAAe,GAAIP,GAAD,IAAS;AACtCC,EAAAA,MAAM,CAACC,YAAP,CAAoBM,UAApB,CAA+BR,GAA/B;AACD,CAFM,C,CAIP;;AAEA,MAAMS,QAAQ,GAAG,MAAMV,YAAY,CAACD,KAAD,CAAnC;;AAEA,MAAMY,QAAQ,GAAGL,GAAG,IAAID,YAAY,CAACN,KAAD,EAAQO,GAAR,CAApC;;AAEA,MAAMM,WAAW,GAAG,MAAMJ,eAAe,CAACT,KAAD,CAAzC;;AAEA,MAAMc,MAAM,GAAG,MAAM,CAAC,CAACH,QAAQ,EAA/B;;AACA,SAASA,QAAT,EAAmBC,QAAnB,EAA6BC,WAA7B,EAA0CC,MAA1C,G,CAEA;;AACA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAC/B,QAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWjB,YAAY,CAACF,SAAD,CAAvB,CAApB;;AACA,MAAI,CAACiB,WAAL,EAAkB;AAChB,WAAO,IAAIG,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,YAAMC,MAAM,GAAG,IAAInB,MAAM,CAACoB,IAAP,CAAYC,SAAhB,EAAf;AACAF,MAAAA,MAAM,CAACG,GAAP,CAAW,MAAOC,MAAP,IAAkB;AAC3B,YAAIC,GAAG,GAAG,MAAM7B,WAAW,CAAC4B,MAAM,CAACE,IAAR,CAA3B;;AACA,YAAID,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACtBC,UAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBJ,GAAG,CAACK,IAAtB;AACA1B,UAAAA,YAAY,CAACP,SAAD,EAAYkB,IAAI,CAACgB,SAAL,CAAeN,GAAG,CAACK,IAAnB,CAAZ,CAAZ;AACAZ,UAAAA,OAAO,CAACO,GAAG,CAACK,IAAL,CAAP;AACD,SAJD,MAIO;AACLX,UAAAA,MAAM,CAACM,GAAD,CAAN;AACD;AACF,OATD;AAUD,KAZM,CAAP;AAaD,GAdD,MAcO;AACLG,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBf,WAAnB;AACA,WAAOG,OAAO,CAACe,OAAR,CAAgBlB,WAAhB,CAAP;AACD;AACF,CApBM","sourcesContent":["/**\n * 工具库\n */\nimport { getCityInfo } from \"./api/city\";\n\n\n// 数据持久化\n// 当前城市KEY\nexport const CURR_CITY = 'hkzf_city', TOKEN = 'hkzf_token';\n\nexport const getLocalData = (key) => {\n  return window.localStorage.getItem(key)\n}\nexport const setLocalData = (key, val) => {\n  window.localStorage.setItem(key, val)\n}\nexport const removeLocalData = (key) => {\n  window.localStorage.removeItem(key)\n}\n\n// token处理\n\nconst getToken = () => getLocalData(TOKEN)\n\nconst setToken = val => setLocalData(TOKEN, val)\n\nconst removeToken = () => removeLocalData(TOKEN)\n\nconst isAuth = () => !!getToken()\nexport { getToken, setToken, removeToken, isAuth }\n\n// 获取当前城市信息\nexport const getCurrCity = () => {\n  const currentCity = JSON.parse(getLocalData(CURR_CITY));\n  if (!currentCity) {\n    return new Promise((reslove, reject) => {\n      const myCity = new window.BMap.LocalCity();\n      myCity.get(async (result) => {\n        let res = await getCityInfo(result.name);\n        if (res.status === 200) {\n          console.log('cc', res.data);\n          setLocalData(CURR_CITY, JSON.stringify(res.data))\n          reslove(res.data)\n        } else {\n          reject(res)\n        }\n      });\n    })\n  } else {\n    console.log('has', currentCity);\n    return Promise.resolve(currentCity)\n  }\n}"]},"metadata":{},"sourceType":"module"}