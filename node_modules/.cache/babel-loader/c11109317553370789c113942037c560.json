{"ast":null,"code":"import \"antd-mobile/lib/toast/style/css\";\nimport _Toast from \"antd-mobile/lib/toast\";\nimport \"antd-mobile/lib/wing-blank/style/css\";\nimport _WingBlank from \"antd-mobile/lib/wing-blank\";\nimport \"antd-mobile/lib/flex/style/css\";\nimport _Flex from \"antd-mobile/lib/flex\";\nimport \"antd-mobile/lib/white-space/style/css\";\nimport _WhiteSpace from \"antd-mobile/lib/white-space\";\nimport \"antd-mobile/lib/nav-bar/style/css\";\nimport _NavBar from \"antd-mobile/lib/nav-bar\";\nvar _jsxFileName = \"F:\\\\\\u767E\\u5EA6\\u4E91\\u4E0B\\u8F7D\\\\React\\\\hkzf\\\\haokezufang\\\\src\\\\pages\\\\Login\\\\index.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './index.module.css';\nimport { login } from '../../utils/api/user';\nimport { setToken } from '../../utils';\nimport { withFormik } from 'formik';\nimport * as yup from 'yup'; // 验证规则：\n\nconst REG_UNAME = /^[a-zA-Z_\\d]{5,8}$/;\nconst REG_PWD = /^[a-zA-Z_\\d]{5,12}$/;\n\nclass Login extends Component {\n  // state = {\n  //   username: '',\n  //   password: ''\n  // }\n  // // 处理表单输入\n  // handlerForm = (e) => {\n  //   // console.log(e);\n  //   let name = e.target.name;\n  //   this.setState({\n  //     [name]: e.target.value\n  //   })\n  // }\n  // 处理登录\n  // handlerLogin = async (e) => {\n  //   // 阻止表单默认action行为\n  //   e.preventDefault();\n  //   console.log(this.state.username, this.state.password);\n  //   const { username, password } = this.state;\n  //   let data = {\n  //     username,\n  //     password\n  //   }\n  //   let res = await login(data);\n  //   console.log(res)\n  //   if (res.status === 200) {\n  //     setLocalData(TOKEN, res.data.token);\n  //     this.props.history.push('/')\n  //   } else {\n  //     Toast.offline(res.description)\n  //   }\n  // }\n  render() {\n    const {\n      values,\n      // touched,\n      errors,\n      handleChange,\n      handleSubmit\n    } = this.props;\n    console.log(this.props); // console.log(touched, errors)\n\n    return React.createElement(\"div\", {\n      className: styles.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(_NavBar, {\n      mode: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"\\u8D26\\u53F7\\u767B\\u5F55\"), React.createElement(_WhiteSpace, {\n      size: \"xl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(_WingBlank, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.formItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: styles.input,\n      name: \"username\",\n      value: values.username,\n      onChange: handleChange,\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u8D26\\u53F7\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), errors.username && React.createElement(\"div\", {\n      className: styles.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, errors.username), React.createElement(\"div\", {\n      className: styles.formItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: styles.input,\n      name: \"password\",\n      type: \"password\",\n      value: values.password,\n      onChange: handleChange,\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u5BC6\\u7801\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), errors.password && React.createElement(\"div\", {\n      className: styles.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, errors.password), React.createElement(\"div\", {\n      className: styles.formSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: styles.submit,\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"\\u767B \\u5F55\"))), React.createElement(_Flex, {\n      className: styles.backHome,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(_Flex.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/registe\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"\\u8FD8\\u6CA1\\u6709\\u8D26\\u53F7\\uFF0C\\u53BB\\u6CE8\\u518C~\")))));\n  }\n\n}\n\nexport default withFormik({\n  // 提供表单的状态数据和当前表单的input的name属性值一一对应\n  mapPropsToValues: () => ({\n    username: 'test2',\n    password: 'test2'\n  }),\n  // 验证表单\n  validationSchema: yup.object().shape({\n    username: yup.string().required('账号为必填项！').matches(REG_UNAME, '账号长度为5到8位，只能出现数字、字母、下划线'),\n    password: yup.string().required('密码为必填项！').matches(REG_PWD, '密码长度为5到12位，只能出现数字、字母、下划线')\n  }),\n  // 处理表单提交\n  // handleSubmit: (values: Values, formikBag: FormikBag) => void | Promise<any>\n  handleSubmit: async (values, formikBag) => {\n    console.log(formikBag);\n    const {\n      username,\n      password\n    } = values;\n    console.log(username, password);\n    let data = {\n      username,\n      password\n    };\n    let res = await login(data);\n    console.log(res);\n\n    if (res.status === 200) {\n      setToken(res.data.token);\n      const {\n        history,\n        location: {\n          state\n        }\n      } = formikBag.props;\n\n      if (state && state.backUrl) {\n        history.replace(state.backUrl);\n      } else {\n        history.go(-1);\n      }\n    } else {\n      _Toast.offline(res.description);\n    }\n  }\n})(Login);","map":{"version":3,"sources":["F:/百度云下载/React/hkzf/haokezufang/src/pages/Login/index.js"],"names":["React","Component","Link","styles","login","setToken","withFormik","yup","REG_UNAME","REG_PWD","Login","render","values","errors","handleChange","handleSubmit","props","console","log","root","formItem","input","username","error","password","formSubmit","submit","backHome","mapPropsToValues","validationSchema","object","shape","string","required","matches","formikBag","data","res","status","token","history","location","state","backUrl","replace","go","offline","description"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Flex, WingBlank, WhiteSpace, NavBar, Toast } from 'antd-mobile'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport styles from './index.module.css'\r\nimport { login } from '../../utils/api/user'\r\nimport { setToken } from '../../utils'\r\n\r\nimport { withFormik } from 'formik'\r\nimport * as yup from 'yup'\r\n\r\n// 验证规则：\r\nconst REG_UNAME = /^[a-zA-Z_\\d]{5,8}$/\r\nconst REG_PWD = /^[a-zA-Z_\\d]{5,12}$/\r\n\r\nclass Login extends Component {\r\n  // state = {\r\n  //   username: '',\r\n  //   password: ''\r\n  // }\r\n\r\n  // // 处理表单输入\r\n  // handlerForm = (e) => {\r\n  //   // console.log(e);\r\n  //   let name = e.target.name;\r\n  //   this.setState({\r\n  //     [name]: e.target.value\r\n  //   })\r\n  // }\r\n\r\n  // 处理登录\r\n  // handlerLogin = async (e) => {\r\n  //   // 阻止表单默认action行为\r\n  //   e.preventDefault();\r\n  //   console.log(this.state.username, this.state.password);\r\n  //   const { username, password } = this.state;\r\n  //   let data = {\r\n  //     username,\r\n  //     password\r\n  //   }\r\n  //   let res = await login(data);\r\n  //   console.log(res)\r\n  //   if (res.status === 200) {\r\n  //     setLocalData(TOKEN, res.data.token);\r\n  //     this.props.history.push('/')\r\n  //   } else {\r\n  //     Toast.offline(res.description)\r\n  //   }\r\n  // }\r\n\r\n\r\n\r\n  render() {\r\n    const {\r\n      values,\r\n      // touched,\r\n      errors,\r\n      handleChange,\r\n      handleSubmit } = this.props;\r\n    console.log(this.props)\r\n    // console.log(touched, errors)\r\n    return (\r\n      <div className={styles.root}>\r\n        {/* 顶部导航 */}\r\n        <NavBar mode=\"light\">\r\n          账号登录\r\n        </NavBar>\r\n        <WhiteSpace size=\"xl\" />\r\n\r\n        {/* 登录表单 */}\r\n        <WingBlank>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className={styles.formItem}>\r\n              <input\r\n                className={styles.input}\r\n                name=\"username\"\r\n                value={values.username}\r\n                onChange={handleChange}\r\n                placeholder=\"请输入账号\"\r\n              />\r\n            </div>\r\n            {/* 长度为5到8位，只能出现数字、字母、下划线 */}\r\n            {errors.username && <div className={styles.error}>{errors.username}</div>}\r\n            <div className={styles.formItem}>\r\n              <input\r\n                className={styles.input}\r\n                name=\"password\"\r\n                type=\"password\"\r\n                value={values.password}\r\n                onChange={handleChange}\r\n                placeholder=\"请输入密码\"\r\n              />\r\n            </div>\r\n            {/* 长度为5到12位，只能出现数字、字母、下划线 */}\r\n            {errors.password && <div className={styles.error}>{errors.password}</div>}\r\n            <div className={styles.formSubmit}>\r\n              <button className={styles.submit} type=\"submit\">\r\n                登 录\r\n              </button>\r\n            </div>\r\n          </form>\r\n          <Flex className={styles.backHome}>\r\n            <Flex.Item>\r\n              <Link to=\"/registe\">还没有账号，去注册~</Link>\r\n            </Flex.Item>\r\n          </Flex>\r\n        </WingBlank>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withFormik({\r\n  // 提供表单的状态数据和当前表单的input的name属性值一一对应\r\n  mapPropsToValues: () => ({ username: 'test2', password: 'test2' }),\r\n  // 验证表单\r\n  validationSchema: yup.object().shape({\r\n    username: yup.string().required('账号为必填项！').matches(REG_UNAME, '账号长度为5到8位，只能出现数字、字母、下划线'),\r\n    password: yup.string().required('密码为必填项！').matches(REG_PWD, '密码长度为5到12位，只能出现数字、字母、下划线'),\r\n  }),\r\n  // 处理表单提交\r\n  // handleSubmit: (values: Values, formikBag: FormikBag) => void | Promise<any>\r\n  handleSubmit: async (values, formikBag) => {\r\n    console.log(formikBag)\r\n    const { username, password } = values;\r\n    console.log(username, password)\r\n    let data = {\r\n      username,\r\n      password\r\n    }\r\n    let res = await login(data);\r\n    console.log(res)\r\n    if (res.status === 200) {\r\n      setToken(res.data.token);\r\n      const { history, location: { state } } = formikBag.props;\r\n      if (state && state.backUrl) {\r\n        history.replace(state.backUrl)\r\n      } else {\r\n        history.go(-1)\r\n      }\r\n    } else {\r\n      Toast.offline(res.description)\r\n    }\r\n  },\r\n})(Login)\r\n"]},"metadata":{},"sourceType":"module"}