{"ast":null,"code":"import \"antd-mobile/lib/toast/style/css\";\nimport _Toast from \"antd-mobile/lib/toast\";\n\n/**\r\n * 全局axios\r\n */\n// 首先导入axios\nimport axios from 'axios';\n// 后端接口的基础路径\nconst BASE_URL = 'http://api-haoke-dev.itheima.net'; // 创建了一个全局的axios实例\n\nconst axios_my = axios.create({\n  baseURL: BASE_URL\n}); // 拦截器\n// Add a request interceptor\n\naxios_my.interceptors.request.use(function (config) {\n  // Do something before request is sent\n  // console.log('请求开始了！开始loading...')\n  _Toast.loading('加载中...', 0);\n\n  return config;\n}, function (error) {\n  // Do something with request error\n  return Promise.reject(error);\n}); // 请求成功后的拦截\n// Add a response interceptor\n\naxios_my.interceptors.response.use(function (response) {\n  // Any status code that lie within the range of 2xx cause this function to trigger\n  // Do something with response data\n  // console.log('请求成功了！关闭loading!')\n  _Toast.hide(); // 只返回需要的数据\n\n\n  const {\n    status,\n    body,\n    description\n  } = response.data;\n  const data = {\n    status,\n    description,\n    data: body\n  };\n  return data;\n}, function (error) {\n  // Any status codes that falls outside the range of 2xx cause this function to trigger\n  // Do something with response error\n  return Promise.reject(error);\n});\nexport { BASE_URL };\nexport default axios_my;","map":{"version":3,"sources":["F:/百度云下载/React/hkzf/haokezufang/src/utils/axios.js"],"names":["axios","BASE_URL","axios_my","create","baseURL","interceptors","request","use","config","loading","error","Promise","reject","response","hide","status","body","description","data"],"mappings":";;;AAAA;;;AAGA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAIA;AACA,MAAMC,QAAQ,GAAG,kCAAjB,C,CACA;;AACA,MAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAN,CAAa;AAC5BC,EAAAA,OAAO,EAAEH;AADmB,CAAb,CAAjB,C,CAKA;AACA;;AACAC,QAAQ,CAACG,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAkC,UAAUC,MAAV,EAAkB;AAClD;AACA;AACA,SAAMC,OAAN,CAAc,QAAd,EAAwB,CAAxB;;AACA,SAAOD,MAAP;AACD,CALD,EAKG,UAAUE,KAAV,EAAiB;AAClB;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CARD,E,CAUA;AACA;;AACAR,QAAQ,CAACG,YAAT,CAAsBQ,QAAtB,CAA+BN,GAA/B,CAAmC,UAAUM,QAAV,EAAoB;AACrD;AACA;AACA;AACA,SAAMC,IAAN,GAJqD,CAKrD;;;AACA,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,IAAV;AAAgBC,IAAAA;AAAhB,MAAgCJ,QAAQ,CAACK,IAA/C;AACA,QAAMA,IAAI,GAAG;AACXH,IAAAA,MADW;AAEXE,IAAAA,WAFW;AAGXC,IAAAA,IAAI,EAAEF;AAHK,GAAb;AAKA,SAAOE,IAAP;AACD,CAbD,EAaG,UAAUR,KAAV,EAAiB;AAClB;AACA;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAjBD;AAmBA,SAAST,QAAT;AACA,eAAeC,QAAf","sourcesContent":["/**\r\n * 全局axios\r\n */\r\n// 首先导入axios\r\nimport axios from 'axios';\r\nimport { Toast } from 'antd-mobile';\r\n\r\n\r\n// 后端接口的基础路径\r\nconst BASE_URL = 'http://api-haoke-dev.itheima.net'\r\n// 创建了一个全局的axios实例\r\nconst axios_my = axios.create({\r\n  baseURL: BASE_URL\r\n});\r\n\r\n\r\n// 拦截器\r\n// Add a request interceptor\r\naxios_my.interceptors.request.use(function (config) {\r\n  // Do something before request is sent\r\n  // console.log('请求开始了！开始loading...')\r\n  Toast.loading('加载中...', 0)\r\n  return config;\r\n}, function (error) {\r\n  // Do something with request error\r\n  return Promise.reject(error);\r\n});\r\n\r\n// 请求成功后的拦截\r\n// Add a response interceptor\r\naxios_my.interceptors.response.use(function (response) {\r\n  // Any status code that lie within the range of 2xx cause this function to trigger\r\n  // Do something with response data\r\n  // console.log('请求成功了！关闭loading!')\r\n  Toast.hide()\r\n  // 只返回需要的数据\r\n  const { status, body, description } = response.data;\r\n  const data = {\r\n    status,\r\n    description,\r\n    data: body,\r\n  }\r\n  return data;\r\n}, function (error) {\r\n  // Any status codes that falls outside the range of 2xx cause this function to trigger\r\n  // Do something with response error\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport { BASE_URL }\r\nexport default axios_my;\r\n"]},"metadata":{},"sourceType":"module"}